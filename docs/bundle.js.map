{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;ACHnB;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;ACHnB;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;ACHnB;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;ACHnB;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;ACHnB;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;ACHnB;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;ACHnB;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;ACHnB;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;ACHnB;;;;;;;;;ACAA;;;;;;;;;ACAA;;;;;;;;;ACAA;;;;;;;;;ACAA;;;;;;;;;ACAA;;;;;;;;;ACAA;;;;;;;;;ACAA;;;;;;;;;ACAA;;;;;;;;ACAa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,GAAkB;AAClD,yCAAyC,mBAAO,CAAC,GAAkB;AACnE,qCAAqC,mBAAO,CAAC,GAAc;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4CAA4C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpDa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,GAAkB;AAClD,sCAAsC,mBAAO,CAAC,GAAe;AAC7D,0CAA0C,mBAAO,CAAC,GAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC,2BAA2B,QAAQ;AACnC,2BAA2B,KAAK;AAChC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClLa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,GAAkB;AAClD,uCAAuC,mBAAO,CAAC,GAAgB;AAC/D,mCAAmC,mBAAO,CAAC,EAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mCAAmC;AACnD;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,6CAA6C,GAAG,GAAG,MAAM;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1Da;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB,GAAG,uBAAuB,GAAG,qBAAqB;AACzE,sBAAsB;AACtB,0BAA0B;AAC1B,gBAAgB;AAChB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,2XAA2X;AAC9b;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wBAAwB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpSa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,GAAkB;AAClD,6CAA6C,mBAAO,CAAC,GAAsB;AAC3E,yCAAyC,mBAAO,CAAC,GAAkB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,gDAAgD,KAAK;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAO,CAAC,GAAiB;AACzB,mBAAO,CAAC,GAAe;AACvB,mBAAO,CAAC,GAAiB;AACzB,mBAAO,CAAC,GAAgC;AACxC,mBAAO,CAAC,GAAuB;AAC/B,mBAAO,CAAC,GAAe;AACvB,mBAAO,CAAC,GAAW;AACnB,mBAAO,CAAC,EAAW;;;;;;;;ACTN;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,GAAkB;AAClD,qCAAqC,mBAAO,CAAC,GAAc;AAC3D,yCAAyC,mBAAO,CAAC,GAAkB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+CAA+C;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,6BAA6B;AACvE;AACA;AACA;AACA;AACA;AACA,2CAA2C,6BAA6B;AACxE;AACA;AACA;AACA;AACA;AACA,0CAA0C,gCAAgC;AAC1E;AACA;AACA;AACA,yCAAyC,gCAAgC;AACzE;AACA;AACA;AACA;;;;;;;;ACvMa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb,wBAAwB,mBAAO,CAAC,GAAkB;AAClD,uCAAuC,mBAAO,CAAC,EAAgB;AAC/D,mCAAmC,mBAAO,CAAC,GAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA,sCAAsC,QAAQ,cAAc,MAAM;AAClE;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;;;;;;;AChEa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,GAAkB;AAClD,0CAA0C,mBAAO,CAAC,GAAmB;AACrE,sCAAsC,mBAAO,CAAC,GAAe;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzLa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,wBAAwB,mBAAO,CAAC,GAAqB;AACrD,0CAA0C,mBAAO,CAAC,GAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;;;;;;;AC/Ea;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAO,CAAC,GAAsB;;;;;;;;ACFjB;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAO,CAAC,GAAmB;AAC3B,mBAAO,CAAC,GAAkB;AAC1B,mBAAO,CAAC,GAAc;AACtB,oCAAoC,mBAAO,CAAC,GAAkB;AAC9D;AACA;AACA;AACA;;;;;;;UCZA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://maui/./src/component/block/block.html","webpack://maui/./src/component/button/button.html","webpack://maui/./src/component/col/col.html","webpack://maui/./src/component/container/container.html","webpack://maui/./src/component/input/input.html","webpack://maui/./src/component/row/row.html","webpack://maui/./src/component/select/select.html","webpack://maui/./src/component/select/selectItem/selectItem.html","webpack://maui/./src/demo/demo.html","webpack://maui/./src/component/block/block.scss","webpack://maui/./src/component/button/button.scss?9ab0","webpack://maui/./src/component/col/col.scss","webpack://maui/./src/component/container/container.scss?b2fd","webpack://maui/./src/component/input/input.scss?6e1b","webpack://maui/./src/component/row/row.scss","webpack://maui/./src/component/select/select.scss?8490","webpack://maui/./src/demo/button/button.scss?4aaa","webpack://maui/./src/index.scss?a5de","webpack://maui/./src/component/block/block.ts","webpack://maui/./src/component/button/button.ts","webpack://maui/./src/component/col/col.ts","webpack://maui/./src/component/componentBase.ts","webpack://maui/./src/component/container/container.ts","webpack://maui/./src/component/entry.ts","webpack://maui/./src/component/input/input.ts","webpack://maui/./src/component/row/row.ts","webpack://maui/./src/component/select/select.ts","webpack://maui/./src/component/select/selectItem/selectItem.ts","webpack://maui/./src/demo/demoEntry.ts","webpack://maui/./src/index.ts","webpack://maui/webpack/bootstrap","webpack://maui/webpack/runtime/define property getters","webpack://maui/webpack/runtime/hasOwnProperty shorthand","webpack://maui/webpack/runtime/make namespace object","webpack://maui/webpack/before-startup","webpack://maui/webpack/startup","webpack://maui/webpack/after-startup"],"sourcesContent":["// Module\nvar code = `<template id=\"ma-block\"><div part=\"row-container\"><slot>columns</slot></div></template>`;\n// Exports\nexport default code;","// Module\nvar code = `<template id=\"ma-button\"><button><slot></slot></button></template>`;\n// Exports\nexport default code;","// Module\nvar code = `<template id=\"ma-col\"><div part=\"col-container\"><slot>content</slot></div></template>`;\n// Exports\nexport default code;","// Module\nvar code = `<template id=\"ma-container\"><slot></slot></template>`;\n// Exports\nexport default code;","// Module\nvar code = `<template id=\"ma-input\"><div><input type=\"text\" id=\"input-field\"> <label for=\"input-field\">Input</label></div></template>`;\n// Exports\nexport default code;","// Module\nvar code = `<template id=\"ma-row\"><div part=\"row-container\"><slot>columns</slot></div></template>`;\n// Exports\nexport default code;","// Module\nvar code = `<template id=\"ma-select\"><div class=\"select-label\">Select</div><div class=\"select-container\"><slot>options</slot></div></template>`;\n// Exports\nexport default code;","// Module\nvar code = `<template id=\"ma-select-item\"><slot>Select Item</slot></template>`;\n// Exports\nexport default code;","// Module\nvar code = `<div class=\"container\"><ma-container type=\"grid\"><ma-row><ma-col>1</ma-col><ma-col>2</ma-col><ma-col>3</ma-col></ma-row><ma-row><ma-col>4</ma-col><ma-col>5</ma-col><ma-col>6</ma-col></ma-row></ma-container></div>`;\n// Exports\nexport default code;","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst componentBase_1 = require(\"../componentBase\");\nconst block_scss_raw_1 = __importDefault(require(\"./block.scss?raw\"));\nconst block_html_1 = __importDefault(require(\"./block.html\"));\nclass MaBlock extends componentBase_1.ComponentBase {\n    static get observedAttributes() {\n        return ['padding', 'margin', 'background', 'border-radius'];\n    }\n    constructor() {\n        const defaultOptions = {\n            padding: null,\n            margin: null,\n            background: null,\n            borderRadius: null\n        };\n        super(defaultOptions, {\n            templateId: \"ma-block\",\n            observedAttributes: MaBlock.observedAttributes,\n            styles: block_scss_raw_1.default\n        });\n    }\n    _initComponent() {\n        this._init();\n        this._updateBlockStyles();\n    }\n    _onOptionChange(key, oldValue, newValue) {\n        this._updateBlockStyles();\n    }\n    _updateBlockStyles() {\n        const { padding, margin, background, borderRadius } = this.options;\n        if (padding) {\n            this.style.padding = padding;\n        }\n        if (margin) {\n            this.style.margin = margin;\n        }\n        if (background) {\n            this.style.backgroundColor = background;\n        }\n        if (borderRadius) {\n            this.style.borderRadius = borderRadius;\n        }\n    }\n    _init() {\n        // ...any initialization logic...\n    }\n}\ncustomElements.define(\"ma-block\", MaBlock);\n(0, componentBase_1.insertTemplate)(block_html_1.default);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst componentBase_1 = require(\"../componentBase\");\nconst button_html_1 = __importDefault(require(\"./button.html\"));\nconst button_scss_raw_1 = __importDefault(require(\"./button.scss?raw\"));\nclass MaButton extends componentBase_1.ComponentBase {\n    // 观察的属性\n    static get observedAttributes() {\n        return ['color', 'variant', 'size', 'disabled', 'loading', 'block', 'icon', 'icon-position', 'html-type'];\n    }\n    constructor() {\n        const defaultOptions = {\n            color: \"primary\",\n            variant: \"filled\",\n            size: \"md\",\n            disabled: false,\n            loading: false,\n            block: false,\n            icon: null,\n            iconPosition: \"left\",\n            htmlType: \"button\"\n        };\n        super(defaultOptions, {\n            templateId: \"ma-button\",\n            observedAttributes: MaButton.observedAttributes,\n            styles: button_scss_raw_1.default\n        });\n        this._classManager = null;\n        this._buttonElement = null;\n    }\n    _initComponent() {\n        this._buttonElement = this.querySelector('button');\n        if (!this._buttonElement) {\n            throw new Error(\"Button element not found in template\");\n        }\n        this._classManager = (0, componentBase_1.createClassManager)(this._buttonElement);\n        this._setupButton();\n        this._updateButtonClasses();\n        this._updateButtonContent();\n    }\n    _setupEventListeners() {\n        if (this._buttonElement) {\n            this._buttonElement.addEventListener('click', this._handleClick.bind(this));\n        }\n    }\n    _cleanupEventListeners() {\n        if (this._buttonElement) {\n            this._buttonElement.removeEventListener('click', this._handleClick.bind(this));\n        }\n    }\n    _onOptionChange(key, oldValue, newValue) {\n        switch (key) {\n            case 'disabled':\n            case 'loading':\n                this._updateButtonState();\n                break;\n            case 'color':\n            case 'variant':\n            case 'size':\n            case 'block':\n                this._updateButtonClasses();\n                break;\n            case 'icon':\n            case 'iconPosition':\n                this._updateButtonContent();\n                break;\n            case 'htmlType':\n                this._updateButtonType();\n                break;\n        }\n    }\n    // 公共方法\n    focus() {\n        var _a;\n        (_a = this._buttonElement) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    blur() {\n        var _a;\n        (_a = this._buttonElement) === null || _a === void 0 ? void 0 : _a.blur();\n    }\n    click() {\n        var _a;\n        if (!this.getOption('disabled') && !this.getOption('loading')) {\n            (_a = this._buttonElement) === null || _a === void 0 ? void 0 : _a.click();\n        }\n    }\n    // 私有方法\n    _setupButton() {\n        if (!this._buttonElement)\n            return;\n        // 设置初始属性\n        this._updateButtonType();\n        this._updateButtonState();\n    }\n    _updateButtonClasses() {\n        if (!this._classManager)\n            return;\n        const { color, variant, size, block } = this.options;\n        this._classManager\n            .removeIf(true, \n        // 移除所有可能的类名\n        'ma-button--primary', 'ma-button--secondary', 'ma-button--success', 'ma-button--warning', 'ma-button--danger', 'ma-button--info', 'ma-button--filled', 'ma-button--outlined', 'ma-button--text', 'ma-button--ghost', 'ma-button--xs', 'ma-button--sm', 'ma-button--md', 'ma-button--lg', 'ma-button--xl', 'ma-button--block')\n            .setBatch({\n            [`ma-button--${color}`]: true,\n            [`ma-button--${variant}`]: true,\n            [`ma-button--${size}`]: true,\n            'ma-button--block': block\n        });\n    }\n    _updateButtonState() {\n        var _a;\n        if (!this._buttonElement)\n            return;\n        const { disabled, loading } = this.options;\n        const isDisabled = disabled || loading;\n        this._buttonElement.disabled = isDisabled;\n        this._buttonElement.setAttribute('aria-disabled', isDisabled.toString());\n        (_a = this._classManager) === null || _a === void 0 ? void 0 : _a.setBatch({\n            'ma-button--disabled': disabled,\n            'ma-button--loading': loading\n        });\n    }\n    _updateButtonContent() {\n        if (!this._buttonElement)\n            return;\n        const { icon, iconPosition, loading } = this.options;\n        const iconSlot = this._buttonElement.querySelector('.ma-button__icon');\n        const textSlot = this._buttonElement.querySelector('.ma-button__text');\n        // 处理加载状态\n        if (loading) {\n            if (iconSlot) {\n                iconSlot.innerHTML = '<ma-icon name=\"loading\" spin></ma-icon>';\n            }\n            return;\n        }\n        // 处理图标\n        if (icon && iconSlot) {\n            iconSlot.innerHTML = `<ma-icon name=\"${icon}\"></ma-icon>`;\n            iconSlot.style.display = '';\n            // 调整图标位置\n            if (iconPosition === 'right' && textSlot && iconSlot) {\n                this._buttonElement.insertBefore(textSlot, iconSlot);\n            }\n        }\n        else if (iconSlot) {\n            iconSlot.innerHTML = '';\n            iconSlot.style.display = 'none';\n        }\n    }\n    _updateButtonType() {\n        if (this._buttonElement) {\n            this._buttonElement.type = this.getOption('htmlType');\n        }\n    }\n    _handleClick(event) {\n        const { disabled, loading } = this.options;\n        if (disabled || loading) {\n            event.preventDefault();\n            event.stopPropagation();\n            return;\n        }\n        // 派发自定义点击事件\n        const customEvent = this.dispatchEvent('ma-click', {\n            originalEvent: event,\n            button: this\n        });\n        // 如果自定义事件被阻止，也阻止默认行为\n        if (!customEvent) {\n            event.preventDefault();\n        }\n    }\n}\n// 注册组件\ncustomElements.define('ma-button', MaButton);\n// 插入模板\n(0, componentBase_1.insertTemplate)(button_html_1.default);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst componentBase_1 = require(\"../componentBase\");\nconst col_scss_raw_1 = __importDefault(require(\"./col.scss?raw\"));\nconst col_html_1 = __importDefault(require(\"./col.html\"));\nclass MaCol extends componentBase_1.ComponentBase {\n    static get observedAttributes() {\n        return ['span', 'offset', 'xs', 'sm', 'md', 'lg', 'xl'];\n    }\n    constructor() {\n        const defaultOptions = {\n            span: 24,\n            offset: 0,\n            xs: null,\n            sm: null,\n            md: null,\n            lg: null,\n            xl: null\n        };\n        super(defaultOptions, {\n            templateId: \"ma-col\",\n            observedAttributes: MaCol.observedAttributes,\n            styles: col_scss_raw_1.default\n        });\n    }\n    _initComponent() {\n        this._init();\n        this._updateColStyles();\n    }\n    _onOptionChange(key, oldValue, newValue) {\n        this._updateColStyles();\n    }\n    _updateColStyles() {\n        const { span, offset, xs, sm, md, lg, xl } = this.options;\n        // 清除旧的类名\n        this.className = this.className.replace(/ma-col-\\S+/g, '');\n        // 添加基础span类\n        this.classList.add(`ma-col-${span}`);\n        // 添加offset类\n        if (offset > 0) {\n            this.classList.add(`ma-col-offset-${offset}`);\n        }\n        // 添加响应式类\n        const breakpoints = { xs, sm, md, lg, xl };\n        Object.entries(breakpoints).forEach(([bp, value]) => {\n            if (value !== null && value > 0) {\n                this.classList.add(`ma-col-${bp}-${value}`);\n            }\n        });\n    }\n    _init() {\n        // 初始化逻辑\n    }\n}\ncustomElements.define(\"ma-col\", MaCol);\n(0, componentBase_1.insertTemplate)(col_html_1.default);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CSSClassManager = exports.TemplateManager = exports.ComponentBase = void 0;\nexports.insertTemplate = insertTemplate;\nexports.createClassManager = createClassManager;\nexports.debounce = debounce;\nexports.throttle = throttle;\nclass ComponentBase extends HTMLElement {\n    constructor(defaultOptions, config) {\n        super();\n        this._isConnected = false;\n        this._templateCache = new Map();\n        this._options = Object.assign({}, defaultOptions);\n        this._config = config;\n        this._shadow = this.attachShadow({\n            mode: config.shadowMode || \"open\",\n            delegatesFocus: config.delegatesFocus || false\n        });\n        this._initTemplate();\n        this._initStyles();\n    }\n    // 静态方法：获取观察的属性\n    static get observedAttributes() {\n        return [];\n    }\n    // 获取组件选项\n    get options() {\n        return this._options;\n    }\n    // 获取Shadow Root\n    get shadow() {\n        return this._shadow;\n    }\n    // 组件挂载时调用\n    connectedCallback() {\n        if (!this._isConnected) {\n            this._isConnected = true;\n            this._syncAttributesToOptions();\n            this._initComponent();\n            this._setupEventListeners();\n        }\n    }\n    // 组件卸载时调用\n    disconnectedCallback() {\n        this._isConnected = false;\n        this._cleanupEventListeners();\n        this._destroyComponent();\n    }\n    // 属性变化时调用\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (this._isConnected && oldValue !== newValue) {\n            this._handleAttributeChange(name, oldValue, newValue);\n        }\n    }\n    // 更新组件选项\n    updateOptions(newOptions) {\n        const oldOptions = Object.assign({}, this._options);\n        this._options = Object.assign(Object.assign({}, this._options), newOptions);\n        this._onOptionsChange(oldOptions, this._options);\n    }\n    // 获取单个选项值\n    getOption(key) {\n        return this._options[key];\n    }\n    // 设置单个选项值\n    setOption(key, value) {\n        const oldValue = this._options[key];\n        if (oldValue !== value) {\n            this._options[key] = value;\n            this._onOptionChange(key, oldValue, value);\n        }\n    }\n    dispatchEvent(eventOrName, detail, options) {\n        var _a, _b, _c;\n        if (eventOrName instanceof Event) {\n            return super.dispatchEvent(eventOrName);\n        }\n        const event = new CustomEvent(eventOrName, Object.assign({ detail, bubbles: (_a = options === null || options === void 0 ? void 0 : options.bubbles) !== null && _a !== void 0 ? _a : true, cancelable: (_b = options === null || options === void 0 ? void 0 : options.cancelable) !== null && _b !== void 0 ? _b : true, composed: (_c = options === null || options === void 0 ? void 0 : options.composed) !== null && _c !== void 0 ? _c : true }, options));\n        return super.dispatchEvent(event);\n    }\n    // 便捷的派发自定义事件方法\n    _dispatchEvent(eventName, detail, options) {\n        return this.dispatchEvent(eventName, detail, options);\n    }\n    querySelector(selector) {\n        return this._shadow.querySelector(selector);\n    }\n    querySelectorAll(selector) {\n        return this._shadow.querySelectorAll(selector);\n    }\n    // 可选的生命周期方法\n    _setupEventListeners() { }\n    _cleanupEventListeners() { }\n    _destroyComponent() { }\n    _onOptionsChange(oldOptions, newOptions) { }\n    _onOptionChange(key, oldValue, newValue) { }\n    // 私有方法：初始化模板\n    _initTemplate() {\n        const template = this._getTemplate();\n        if (template) {\n            this._shadow.appendChild(template.content.cloneNode(true));\n        }\n        else {\n            console.warn(`Template \"${this._config.templateId}\" not found for component`);\n        }\n    }\n    // 私有方法：初始化样式\n    _initStyles() {\n        if (this._config.styles) {\n            const style = new CSSStyleSheet();\n            style.replaceSync(this._config.styles);\n            this._shadow.adoptedStyleSheets = [style];\n        }\n    }\n    // 私有方法：获取模板（带缓存）\n    _getTemplate() {\n        const templateId = this._config.templateId;\n        if (this._templateCache.has(templateId)) {\n            return this._templateCache.get(templateId);\n        }\n        const template = document.getElementById(templateId);\n        if (template) {\n            this._templateCache.set(templateId, template);\n        }\n        return template;\n    }\n    // 私有方法：同步属性到选项\n    _syncAttributesToOptions() {\n        for (const key in this._options) {\n            const attrValue = this.getAttribute(key.toLowerCase());\n            if (attrValue !== null) {\n                this._parseAttributeValue(key, attrValue);\n            }\n        }\n    }\n    // 私有方法：解析属性值\n    _parseAttributeValue(key, value) {\n        const currentValue = this._options[key];\n        if (typeof currentValue === \"boolean\") {\n            return value !== \"false\";\n        }\n        else if (typeof currentValue === \"number\") {\n            const numValue = parseFloat(value);\n            return !isNaN(numValue) ? numValue : currentValue;\n        }\n        else {\n            return value;\n        }\n    }\n    // 私有方法：处理属性变化\n    _handleAttributeChange(name, oldValue, newValue) {\n        const key = name.toLowerCase();\n        if (key in this._options) {\n            if (newValue !== null) {\n                const parsedValue = this._parseAttributeValue(key, newValue);\n                const oldOptionValue = this._options[key];\n                this._options[key] = parsedValue;\n                this._onOptionChange(key, oldOptionValue, parsedValue);\n            }\n        }\n    }\n}\nexports.ComponentBase = ComponentBase;\n// 模板管理器\nclass TemplateManager {\n    constructor() {\n        this._container = null;\n        this._templates = new Set();\n    }\n    static getInstance() {\n        if (!TemplateManager._instance) {\n            TemplateManager._instance = new TemplateManager();\n        }\n        return TemplateManager._instance;\n    }\n    // 插入模板到DOM\n    insertTemplate(template, templateId) {\n        if (templateId && this._templates.has(templateId)) {\n            return; // 避免重复插入\n        }\n        const container = this._getContainer();\n        container.innerHTML += template;\n        if (templateId) {\n            this._templates.add(templateId);\n        }\n    }\n    // 批量插入模板\n    insertTemplates(templates) {\n        const container = this._getContainer();\n        const fragment = document.createDocumentFragment();\n        const tempDiv = document.createElement('div');\n        templates.forEach(({ template, id }) => {\n            if (id && this._templates.has(id)) {\n                return;\n            }\n            tempDiv.innerHTML = template;\n            while (tempDiv.firstChild) {\n                fragment.appendChild(tempDiv.firstChild);\n            }\n            if (id) {\n                this._templates.add(id);\n            }\n        });\n        container.appendChild(fragment);\n    }\n    // 检查模板是否存在\n    hasTemplate(templateId) {\n        return document.getElementById(templateId) !== null;\n    }\n    _getContainer() {\n        if (!this._container) {\n            this._container = document.querySelector(\"#maui-template\");\n            if (!this._container) {\n                this._container = document.createElement(\"div\");\n                this._container.id = \"maui-template\";\n                this._container.style.display = \"none\";\n                document.head.appendChild(this._container);\n            }\n        }\n        return this._container;\n    }\n}\nexports.TemplateManager = TemplateManager;\n// 向后兼容的函数\nfunction insertTemplate(template) {\n    TemplateManager.getInstance().insertTemplate(template);\n}\n// 工具类：CSS类名管理\nclass CSSClassManager {\n    constructor(element) {\n        this._element = element;\n    }\n    // 添加类名\n    add(...classNames) {\n        this._element.classList.add(...classNames);\n        return this;\n    }\n    // 移除类名\n    remove(...classNames) {\n        this._element.classList.remove(...classNames);\n        return this;\n    }\n    // 切换类名\n    toggle(className, force) {\n        this._element.classList.toggle(className, force);\n        return this;\n    }\n    // 条件性添加类名\n    addIf(condition, ...classNames) {\n        if (condition) {\n            this.add(...classNames);\n        }\n        return this;\n    }\n    // 条件性移除类名\n    removeIf(condition, ...classNames) {\n        if (condition) {\n            this.remove(...classNames);\n        }\n        return this;\n    }\n    // 批量设置类名状态\n    setBatch(classMap) {\n        Object.entries(classMap).forEach(([className, shouldAdd]) => {\n            this.toggle(className, shouldAdd);\n        });\n        return this;\n    }\n}\nexports.CSSClassManager = CSSClassManager;\n// 工具函数：创建CSS类管理器\nfunction createClassManager(element) {\n    return new CSSClassManager(element);\n}\n// 工具函数：防抖\nfunction debounce(func, wait) {\n    let timeout;\n    return (...args) => {\n        clearTimeout(timeout);\n        timeout = window.setTimeout(() => func(...args), wait);\n    };\n}\n// 工具函数：节流\nfunction throttle(func, wait) {\n    let inThrottle = false;\n    return (...args) => {\n        if (!inThrottle) {\n            func(...args);\n            inThrottle = true;\n            setTimeout(() => inThrottle = false, wait);\n        }\n    };\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst componentBase_1 = require(\"../componentBase\");\nconst container_scss_raw_1 = __importDefault(require(\"./container.scss?raw\"));\nconst container_html_1 = __importDefault(require(\"./container.html\"));\nclass MaContainer extends componentBase_1.ComponentBase {\n    static get observedAttributes() {\n        return ['type'];\n    }\n    constructor() {\n        const defaultOptions = {\n            type: null\n        };\n        super(defaultOptions, {\n            templateId: \"ma-container\",\n            observedAttributes: MaContainer.observedAttributes,\n            styles: container_scss_raw_1.default\n        });\n    }\n    _initComponent() {\n        this._updateContainerType();\n    }\n    _onOptionChange(key, oldValue, newValue) {\n        if (key === 'type') {\n            this._updateContainerType();\n        }\n    }\n    _updateContainerType() {\n        const { type } = this.options;\n        this.classList.remove('ma-container--grid', 'ma-container--flex');\n        if (type) {\n            this.classList.add(`ma-container--${type}`);\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this._init();\n    }\n    _init() {\n        // 初始化逻辑\n    }\n}\ncustomElements.define('ma-container', MaContainer);\n(0, componentBase_1.insertTemplate)(container_html_1.default);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./button/button\");\nrequire(\"./input/input\");\nrequire(\"./select/select\");\nrequire(\"./select/selectItem/selectItem\");\nrequire(\"./container/container\");\nrequire(\"./block/block\");\nrequire(\"./row/row\");\nrequire(\"./col/col\");\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst componentBase_1 = require(\"../componentBase\");\nconst input_html_1 = __importDefault(require(\"./input.html\"));\nconst input_scss_raw_1 = __importDefault(require(\"./input.scss?raw\"));\nclass MaInput extends componentBase_1.ComponentBase {\n    static get observedAttributes() {\n        return ['value', 'label', 'color', 'size', 'placeholder', 'readonly', 'disabled', 'required', 'type'];\n    }\n    constructor() {\n        const defaultOptions = {\n            value: \"\",\n            label: \"输入框\",\n            color: \"default\",\n            size: \"default\",\n            defaultValue: null,\n            placeholder: null,\n            readonly: false,\n            disabled: false,\n            required: false,\n            type: \"text\"\n        };\n        super(defaultOptions, {\n            templateId: \"ma-input\",\n            observedAttributes: MaInput.observedAttributes,\n            styles: input_scss_raw_1.default\n        });\n        this._inputElement = null;\n        this._labelElement = null;\n    }\n    _initComponent() {\n        this._inputElement = this.querySelector(\"input\");\n        this._labelElement = this.querySelector(\"label\");\n        if (!this._inputElement) {\n            throw new Error(\"Input element not found in template\");\n        }\n        if (!this._labelElement) {\n            throw new Error(\"Label element not found in template\");\n        }\n        this._initLabel();\n        this._initInput();\n    }\n    _setupEventListeners() {\n        if (!this._inputElement || !this._labelElement)\n            return;\n        this._inputElement.addEventListener(\"input\", this._handleInput.bind(this));\n        this._inputElement.addEventListener(\"change\", this._handleChange.bind(this));\n        this._inputElement.addEventListener(\"focus\", this._handleFocus.bind(this));\n        this._inputElement.addEventListener(\"blur\", this._handleBlur.bind(this));\n    }\n    _onOptionChange(key, oldValue, newValue) {\n        switch (key) {\n            case 'value':\n                this._updateInputValue();\n                break;\n            case 'label':\n                this._updateLabel();\n                break;\n            case 'placeholder':\n                this._updatePlaceholder();\n                break;\n            case 'disabled':\n            case 'readonly':\n                this._updateInputState();\n                break;\n            case 'required':\n                this._updateRequired();\n                break;\n            case 'type':\n                this._updateInputType();\n                break;\n        }\n    }\n    // 公共方法\n    focus() {\n        var _a;\n        (_a = this._inputElement) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    blur() {\n        var _a;\n        (_a = this._inputElement) === null || _a === void 0 ? void 0 : _a.blur();\n    }\n    getValue() {\n        var _a;\n        return ((_a = this._inputElement) === null || _a === void 0 ? void 0 : _a.value) || '';\n    }\n    setValue(value) {\n        this.setOption('value', value);\n    }\n    _initLabel() {\n        if (!this._labelElement)\n            return;\n        const { label, required } = this.options;\n        if (label) {\n            this._labelElement.textContent = label;\n        }\n        if (required) {\n            this._labelElement.classList.add(\"required\");\n        }\n        this._updateLabelPosition();\n    }\n    _initInput() {\n        if (!this._inputElement)\n            return;\n        const { value, placeholder, readonly, disabled, type } = this.options;\n        this._inputElement.value = value;\n        this._inputElement.type = type;\n        this._inputElement.readOnly = readonly;\n        this._inputElement.disabled = disabled;\n        if (placeholder) {\n            this._inputElement.placeholder = placeholder;\n        }\n        this._updateInputState();\n        this._updateLabelPosition();\n    }\n    _updateInputValue() {\n        if (this._inputElement) {\n            this._inputElement.value = this.getOption('value');\n            this._updateLabelPosition();\n        }\n    }\n    _updateLabel() {\n        if (this._labelElement) {\n            const label = this.getOption('label');\n            this._labelElement.textContent = label || '';\n        }\n    }\n    _updatePlaceholder() {\n        if (this._inputElement) {\n            const placeholder = this.getOption('placeholder');\n            if (placeholder) {\n                this._inputElement.placeholder = placeholder;\n            }\n            else {\n                this._inputElement.removeAttribute('placeholder');\n            }\n            this._updateLabelPosition();\n        }\n    }\n    _updateInputState() {\n        if (this._inputElement) {\n            this._inputElement.readOnly = this.getOption('readonly');\n            this._inputElement.disabled = this.getOption('disabled');\n        }\n    }\n    _updateRequired() {\n        if (this._labelElement) {\n            const required = this.getOption('required');\n            this._labelElement.classList.toggle('required', required);\n        }\n    }\n    _updateInputType() {\n        if (this._inputElement) {\n            this._inputElement.type = this.getOption('type');\n        }\n    }\n    _updateLabelPosition() {\n        var _a;\n        if (!this._labelElement)\n            return;\n        const hasValue = ((_a = this._inputElement) === null || _a === void 0 ? void 0 : _a.value) !== '';\n        const hasPlaceholder = this.getOption('placeholder') !== null;\n        if (hasValue || hasPlaceholder) {\n            this._labelElement.classList.add(\"little-label\");\n            this._labelElement.classList.remove(\"big-label\");\n        }\n        else {\n            this._labelElement.classList.remove(\"little-label\");\n            this._labelElement.classList.add(\"big-label\");\n        }\n    }\n    _handleInput(event) {\n        event.stopPropagation();\n        const value = event.target.value;\n        this.setOption('value', value);\n        this._updateLabelPosition();\n        this._dispatchEvent(\"ma-input\", { value, originalEvent: event });\n    }\n    _handleChange(event) {\n        const value = event.target.value;\n        this.setOption('value', value);\n        this._updateLabelPosition();\n        this._dispatchEvent(\"ma-change\", { value, originalEvent: event });\n    }\n    _handleFocus() {\n        var _a, _b;\n        (_a = this._labelElement) === null || _a === void 0 ? void 0 : _a.classList.add(\"little-label\");\n        (_b = this._labelElement) === null || _b === void 0 ? void 0 : _b.classList.remove(\"big-label\");\n        this._dispatchEvent(\"ma-focus\", { value: this.getOption('value') });\n    }\n    _handleBlur() {\n        this._updateLabelPosition();\n        this._dispatchEvent(\"ma-blur\", { value: this.getOption('value') });\n    }\n}\ncustomElements.define(\"ma-input\", MaInput);\n(0, componentBase_1.insertTemplate)(input_html_1.default);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MaRow = void 0;\nconst componentBase_1 = require(\"../componentBase\");\nconst row_scss_raw_1 = __importDefault(require(\"./row.scss?raw\"));\nconst row_html_1 = __importDefault(require(\"./row.html\"));\nclass MaRow extends componentBase_1.ComponentBase {\n    static get observedAttributes() {\n        return ['gutter', 'justify', 'align'];\n    }\n    constructor() {\n        const defaultOptions = {\n            gutter: 0,\n            justify: \"start\",\n            align: \"top\"\n        };\n        super(defaultOptions, {\n            templateId: \"ma-row\",\n            observedAttributes: MaRow.observedAttributes,\n            styles: row_scss_raw_1.default\n        });\n        this._colCount = 0;\n        this._cols = [];\n    }\n    _initComponent() {\n        this._init();\n        this._updateRowStyles();\n    }\n    _onOptionChange(key, oldValue, newValue) {\n        this._updateRowStyles();\n    }\n    _updateRowStyles() {\n        const { gutter, justify, align } = this.options;\n        this.classList.remove('ma-row--start', 'ma-row--end', 'ma-row--center', 'ma-row--space-around', 'ma-row--space-between', 'ma-row--top', 'ma-row--middle', 'ma-row--bottom');\n        this.classList.add(`ma-row--${justify}`, `ma-row--${align}`);\n        if (gutter > 0) {\n            this.style.setProperty('--ma-row-gutter', `${gutter}px`);\n        }\n    }\n    _init() {\n        // 计算列数\n        this._updateColCount();\n    }\n    _updateColCount() {\n        const cols = this.querySelectorAll(\"ma-col\");\n        this._colCount = cols.length;\n        this._cols = [];\n        cols.forEach((col) => {\n            var _a;\n            this._cols.push((_a = col.getAttribute(\"span\")) !== null && _a !== void 0 ? _a : \"1\");\n        });\n    }\n    get colCount() {\n        return this._colCount;\n    }\n    get cols() {\n        return this._cols;\n    }\n}\nexports.MaRow = MaRow;\ncustomElements.define(\"ma-row\", MaRow);\n(0, componentBase_1.insertTemplate)(row_html_1.default);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst componentBase_1 = require(\"../componentBase\");\nconst select_scss_raw_1 = __importDefault(require(\"./select.scss?raw\"));\nconst select_html_1 = __importDefault(require(\"./select.html\"));\nclass MaSelect extends componentBase_1.ComponentBase {\n    static get observedAttributes() {\n        return ['value', 'label', 'placeholder', 'selection-mode', 'disabled', 'clearable', 'searchable', 'size'];\n    }\n    constructor() {\n        const defaultOptions = {\n            value: \"\",\n            label: null,\n            placeholder: \"请选择\",\n            selectionMode: \"single\",\n            disabled: false,\n            clearable: false,\n            searchable: false,\n            size: \"default\"\n        };\n        super(defaultOptions, {\n            templateId: \"ma-select\",\n            observedAttributes: MaSelect.observedAttributes,\n            styles: select_scss_raw_1.default\n        });\n        this._isOpen = false;\n        this._selectedItems = [];\n    }\n    _initComponent() {\n        this._initLabel();\n        this._initDropdown();\n    }\n    _setupEventListeners() {\n        const selector = this.querySelector('.select-label');\n        if (selector) {\n            selector.addEventListener('click', this._toggleDropdown.bind(this));\n        }\n        // 监听slot变化\n        const slot = this.querySelector('slot');\n        if (slot) {\n            slot.addEventListener('slotchange', this._handleSlotChange.bind(this));\n        }\n        // 点击外部关闭下拉框\n        document.addEventListener('click', this._handleOutsideClick.bind(this));\n    }\n    _cleanupEventListeners() {\n        document.removeEventListener('click', this._handleOutsideClick.bind(this));\n    }\n    _onOptionChange(key, oldValue, newValue) {\n        switch (key) {\n            case 'label':\n            case 'placeholder':\n                this._updateLabel();\n                break;\n            case 'disabled':\n                this._updateDisabledState();\n                break;\n            case 'value':\n                this._updateSelection();\n                break;\n        }\n    }\n    // 公共方法\n    open() {\n        if (!this.getOption('disabled')) {\n            this._isOpen = true;\n            this._updateDropdownState();\n        }\n    }\n    close() {\n        this._isOpen = false;\n        this._updateDropdownState();\n    }\n    toggle() {\n        if (this._isOpen) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    getValue() {\n        return this.getOption('value');\n    }\n    setValue(value) {\n        this.setOption('value', value);\n    }\n    _initLabel() {\n        this._updateLabel();\n    }\n    _initDropdown() {\n        this._updateDropdownState();\n        this._handleSlotChange();\n    }\n    _updateLabel() {\n        const labelDom = this.querySelector(\".select-label\");\n        if (!labelDom)\n            return;\n        const { label, placeholder, value } = this.options;\n        if (Array.isArray(value) && value.length > 0) {\n            labelDom.textContent = value.join(', ');\n        }\n        else if (typeof value === 'string' && value) {\n            labelDom.textContent = value;\n        }\n        else if (label) {\n            labelDom.textContent = label;\n        }\n        else {\n            labelDom.textContent = placeholder || '请选择';\n        }\n    }\n    _updateDisabledState() {\n        const disabled = this.getOption('disabled');\n        this.classList.toggle('ma-select--disabled', disabled);\n    }\n    _updateSelection() {\n        const value = this.getOption('value');\n        // 更新选中状态\n        const items = this.querySelectorAll('ma-select-item');\n        items.forEach(item => {\n            const itemValue = item.getAttribute('value') || '';\n            const isSelected = Array.isArray(value)\n                ? value.includes(itemValue)\n                : value === itemValue;\n            item.classList.toggle('selected', isSelected);\n        });\n        this._updateLabel();\n        this._dispatchEvent('ma-change', { value });\n    }\n    _updateDropdownState() {\n        this.classList.toggle('ma-select--open', this._isOpen);\n        if (this._isOpen) {\n            this._dispatchEvent('ma-open');\n        }\n        else {\n            this._dispatchEvent('ma-close');\n        }\n    }\n    _toggleDropdown() {\n        if (this.getOption('disabled'))\n            return;\n        this.toggle();\n    }\n    _handleSlotChange() {\n        const slot = this.querySelector('slot');\n        if (!slot)\n            return;\n        const assignedElements = slot.assignedElements({ flatten: true });\n        const selectItems = assignedElements.filter(el => el.tagName.toLowerCase() === 'ma-select-item');\n        // 为每个选项添加点击事件\n        selectItems.forEach(item => {\n            item.addEventListener('click', () => this._handleItemClick(item));\n        });\n        this._updateSelection();\n    }\n    _handleItemClick(item) {\n        const itemValue = item.getAttribute('value') || '';\n        const { selectionMode, value } = this.options;\n        if (selectionMode === 'multiple') {\n            const currentValue = Array.isArray(value) ? [...value] : [];\n            const index = currentValue.indexOf(itemValue);\n            if (index > -1) {\n                currentValue.splice(index, 1);\n            }\n            else {\n                currentValue.push(itemValue);\n            }\n            this.setValue(currentValue);\n        }\n        else {\n            this.setValue(itemValue);\n            this.close();\n        }\n    }\n    _handleOutsideClick(event) {\n        if (!this.contains(event.target)) {\n            this.close();\n        }\n    }\n}\ncustomElements.define('ma-select', MaSelect);\n(0, componentBase_1.insertTemplate)(select_html_1.default);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MaSelectItem = void 0;\nconst componentBase_1 = require(\"../../componentBase\");\nconst selectItem_html_1 = __importDefault(require(\"./selectItem.html\"));\nclass MaSelectItem extends componentBase_1.ComponentBase {\n    static get observedAttributes() {\n        return ['value', 'label', 'disabled', 'selected'];\n    }\n    constructor() {\n        const defaultOptions = {\n            value: \"\",\n            label: null,\n            disabled: false,\n            selected: false\n        };\n        super(defaultOptions, {\n            templateId: \"ma-select-item\",\n            observedAttributes: MaSelectItem.observedAttributes\n        });\n    }\n    _initComponent() {\n        this._updateContent();\n        this._updateStates();\n    }\n    _onOptionChange(key, oldValue, newValue) {\n        switch (key) {\n            case 'label':\n                this._updateContent();\n                break;\n            case 'disabled':\n            case 'selected':\n                this._updateStates();\n                break;\n        }\n    }\n    // 公共方法\n    getValue() {\n        return this.getOption('value');\n    }\n    setValue(value) {\n        this.setOption('value', value);\n    }\n    select() {\n        this.setOption('selected', true);\n    }\n    deselect() {\n        this.setOption('selected', false);\n    }\n    _updateContent() {\n        const { label } = this.options;\n        const contentElement = this.querySelector('[part=\"content\"]');\n        if (contentElement) {\n            if (label) {\n                contentElement.textContent = label;\n            }\n            else {\n                // 如果没有label，使用slot内容\n                const slot = contentElement.querySelector('slot');\n                if (!slot) {\n                    const slotElement = document.createElement('slot');\n                    contentElement.appendChild(slotElement);\n                }\n            }\n        }\n    }\n    _updateStates() {\n        const { disabled, selected } = this.options;\n        this.classList.toggle('ma-select-item--disabled', disabled);\n        this.classList.toggle('ma-select-item--selected', selected);\n        this.setAttribute('aria-disabled', disabled.toString());\n        this.setAttribute('aria-selected', selected.toString());\n    }\n}\nexports.MaSelectItem = MaSelectItem;\ncustomElements.define('ma-select-item', MaSelectItem);\n(0, componentBase_1.insertTemplate)(selectItem_html_1.default);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./button/button.scss\");\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./component/entry\");\nrequire(\"./demo/demoEntry\");\nrequire(\"./index.scss\");\nconst demo_html_1 = __importDefault(require(\"./demo/demo.html\"));\nconst root = document.getElementById(\"main-container\");\nif (root) {\n    root.innerHTML = demo_html_1.default;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(156);\n",""],"names":[],"sourceRoot":""}