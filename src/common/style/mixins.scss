// ============================
// maUI Style Mixins
// 通用的样式混入函数
// ============================

@import './tokens.scss';

// ==== 布局相关 ====

// Flexbox 快速布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 居中布局
@mixin center($type: both) {
  display: flex;
  
  @if $type == both {
    justify-content: center;
    align-items: center;
  } @else if $type == horizontal {
    justify-content: center;
  } @else if $type == vertical {
    align-items: center;
  }
}

// 绝对定位居中
@mixin absolute-center($type: both) {
  position: absolute;
  
  @if $type == both {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if $type == horizontal {
    left: 50%;
    transform: translateX(-50%);
  } @else if $type == vertical {
    top: 50%;
    transform: translateY(-50%);
  }
}

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// ==== 尺寸相关 ====

// 正方形
@mixin square($size) {
  width: $size;
  height: $size;
}

// 圆形
@mixin circle($size) {
  @include square($size);
  border-radius: 50%;
}

// 响应式尺寸
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// ==== 文本相关 ====

// 文本溢出省略号
@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $lines;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// 文本不可选择
@mixin no-select {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// ==== 视觉效果 ====

// 阴影效果
@mixin shadow($type: md) {
  box-shadow: ma-shadow($type);
}

// 边框
@mixin border($width: sm, $style: solid, $color: var(--ma-border-color)) {
  border: var(--ma-border-width-#{$width}) $style $color;
}

// 圆角
@mixin radius($size: md) {
  border-radius: ma-border-radius($size);
}

// ==== 交互状态 ====

// 悬停效果
@mixin hover-lift($distance: 2px, $duration: var(--ma-duration-normal)) {
  transition: transform $duration var(--ma-ease-ease-out);
  
  &:hover {
    transform: translateY(-#{$distance});
  }
}

// 点击效果
@mixin active-scale($scale: 0.98, $duration: var(--ma-duration-fast)) {
  transition: transform $duration var(--ma-ease-ease-out);
  
  &:active {
    transform: scale($scale);
  }
}

// Focus环
@mixin focus-ring($color: var(--ma-color-primary), $width: 2px, $offset: 2px) {
  outline: none;
  
  &:focus-visible {
    box-shadow: 0 0 0 $offset transparent, 0 0 0 ($offset + $width) rgba($color, 0.2);
  }
}

// ==== 动画相关 ====

// 过渡动画
@mixin transition($properties: all, $duration: var(--ma-duration-normal), $timing: var(--ma-ease-ease-out)) {
  transition: $properties $duration $timing;
}

// 淡入动画
@mixin fade-in($duration: var(--ma-duration-normal)) {
  animation: ma-fade-in $duration var(--ma-ease-ease-out);
}

// 滑入动画
@mixin slide-in($direction: up, $distance: 10px, $duration: var(--ma-duration-normal)) {
  animation: ma-slide-in-#{$direction} $duration var(--ma-ease-ease-out);
}

// ==== 响应式相关 ====

// 响应式断点
@mixin responsive($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: var(--ma-breakpoint-xs)) { @content; }
  } @else if $breakpoint == sm {
    @media (min-width: var(--ma-breakpoint-sm)) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: var(--ma-breakpoint-md)) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: var(--ma-breakpoint-lg)) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: var(--ma-breakpoint-xl)) { @content; }
  } @else if $breakpoint == xxl {
    @media (min-width: var(--ma-breakpoint-xxl)) { @content; }
  }
}

// 移动端优先的响应式
@mixin mobile-first($breakpoint) {
  @include responsive($breakpoint) { @content; }
}

// 桌面端优先的响应式
@mixin desktop-first($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: calc(var(--ma-breakpoint-sm) - 1px)) { @content; }
  } @else if $breakpoint == sm {
    @media (max-width: calc(var(--ma-breakpoint-md) - 1px)) { @content; }
  } @else if $breakpoint == md {
    @media (max-width: calc(var(--ma-breakpoint-lg) - 1px)) { @content; }
  } @else if $breakpoint == lg {
    @media (max-width: calc(var(--ma-breakpoint-xl) - 1px)) { @content; }
  } @else if $breakpoint == xl {
    @media (max-width: calc(var(--ma-breakpoint-xxl) - 1px)) { @content; }
  }
}

// ==== 主题相关 ====

// 深色主题样式
@mixin dark-theme {
  [data-theme="dark"] & {
    @content;
  }
}

// 浅色主题样式
@mixin light-theme {
  [data-theme="light"] & {
    @content;
  }
}

// 主题变量
@mixin theme-aware($light-value, $dark-value) {
  @include light-theme {
    @content($light-value);
  }
  
  @include dark-theme {
    @content($dark-value);
  }
}

// ==== 组件状态 ====

// 禁用状态
@mixin disabled {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}

// 加载状态
@mixin loading {
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.4),
      transparent
    );
    animation: ma-loading-shimmer 1.5s infinite;
  }
}

// ==== 工具类 ====

// 隐藏元素但保持可访问性
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  padding: 0 !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// 重置按钮样式
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  cursor: pointer;
  outline: none;
  color: inherit;
}

// 重置列表样式
@mixin list-reset {
  margin: 0;
  padding: 0;
  list-style: none;
}

// ==== 滚动条样式 ====
@mixin custom-scrollbar($width: 6px, $track-color: transparent, $thumb-color: var(--ma-color-gray-4)) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width;
    
    &:hover {
      background: var(--ma-color-gray-5);
    }
  }
  
  // Firefox
  scrollbar-width: thin;
  scrollbar-color: $thumb-color $track-color;
}

// ==== 动画关键帧 ====
@keyframes ma-fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes ma-slide-in-up {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes ma-slide-in-down {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes ma-slide-in-left {
  from {
    opacity: 0;
    transform: translateX(-10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes ma-slide-in-right {
  from {
    opacity: 0;
    transform: translateX(10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes ma-loading-shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

@keyframes ma-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}